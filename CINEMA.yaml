openapi: '3.0.2'
info:
  title: Salle De Chinema
  description: Calendrier hebdomadaire projection
  version: '1.0.0'
servers:
  - url: https://STD21005.com
paths:
  /Film:
    get:
      tags:
        - "Film"
      summary: get all film
      operationId: get film
      parameters:
        - name: Genre
          in: query
          schema:
            type: string
      responses:
        '200':
          description: list of film
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request
    
    post:
      tags:
        - "Film"
      summary: add new film
      operationId: add film
      requestBody:
        description: A film to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/film'
        required: true
      responses:
        '200':
          description: A film add succefull
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request

  /Film/{id}:
    put:
      tags:
        - "Film"
      summary: Change all information of film
      operationId: Change all information
      parameters:
        - name: Titre
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: update a film
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/film'
      responses:
        '200':
          description: update succefull
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request
        
    patch:
      tags:
        - "Film"
      summary: Change part of a film
      operationId: Change part 
      requestBody:
        description: Film is update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/film'
            examples:
              ChangeTitle:
                value:
                  id: 1
                  Titre: Strange
              ChangeGenre:
                value:
                  id: 2
                  Genre: Orreur
              ChangeClass:
                value:
                  id: 3
                  Class: A
      responses:
        '200':
          description: update succefull
        '400':
          description: erreur update
        
    delete:
      tags:
        - "Film"
      summary: Delete a Film
      operationId: Delete Film
      parameters:
        - name: Titre
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succefull
        '400':
          description: erreur 

  /Type/Film:
    get:
      tags:
        - "Type"
      summary: get all Type
      operationId: get Type
      parameters:
        - name: Genre
          in: query
          schema:
            type: string
      responses:
        '200':
          description: list of Type
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/Type'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request
    
    post:
      tags:
        - "Type"
      summary: add new Type
      operationId: add Type
      requestBody:
        description: A Type to be added
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Type'
                  - $ref: '#/components/schemas/film'
        required: true
      responses:
        '200':
          description: A Type add succefull
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/Type'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request

  /Type/{id_type}/film/{Titre}:
    put:
      tags:
        - "Type"
      summary: Change all information of Type
      operationId: Change all information
      parameters:
        - name: id_type
          in: path
          required: true
          schema:
            type: string
        - name: Titre
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: update a Type
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                    - $ref: '#/components/schemas/Type'
                    - $ref: '#/components/schemas/film'
      responses:
        '200':
          description: update succefull
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/All_Film'
                    - $ref: '#/components/schemas/Type'
                    - $ref: '#/components/schemas/film'
        '400':
          description: Bad request
        
   
        
    delete:
      tags:
        - "Type"
      summary: Delete a Type
      operationId: Delete Type
      parameters:
        - name: id_type
          in: path
          required: true
          schema:
            type: string
        - name: Titre
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succefull
        '400':
          description: erreur 
      
                      
components:
  schemas:
      film:
        type: object
        properties:
          Titre:
            type: string
            example: good 
          Genre:
            type: string
            example: anventure
          Dure:
            type: integer
          Resume:
            type: string
      All_Film:
        type: object
        properties:
          id_film:
            type: integer
      Type:
        type: object
        properties:
          Type:
            type: string
            example: Serie
      id_type:
        type: object
        properties:
          id_type:
            type: integer
